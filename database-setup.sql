-- ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงููุงููุฉ ููุธุงู ุงูุถูุงูุงุช
-- ููุฐ ูุฐุง ุงูููู ูู Supabase SQL Editor

-- ุชูุนูู ุงูููููุงุช ุงููุทููุจุฉ
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- ุญุฐู ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ (ุฅุฐุง ูุงูุช ููุฌูุฏุฉ)
DROP TABLE IF EXISTS warranties CASCADE;
DROP TABLE IF EXISTS customers CASCADE;
DROP TABLE IF EXISTS products CASCADE;
DROP TABLE IF EXISTS user_profiles CASCADE;

-- ุฅูุดุงุก ุฌุฏูู ุงูููุชุฌุงุช
CREATE TABLE products (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ุฌุฏูู ุงูุนููุงุก
CREATE TABLE customers (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    phone VARCHAR(20) NOT NULL,
    email VARCHAR(255),
    address TEXT,
    invoice_number VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ุฌุฏูู ูููุงุช ุงููุณุชุฎุฏููู
CREATE TABLE user_profiles (
    id UUID REFERENCES auth.users(id) ON DELETE CASCADE PRIMARY KEY,
    email VARCHAR(255) UNIQUE NOT NULL,
    full_name VARCHAR(255) NOT NULL,
    role VARCHAR(20) DEFAULT 'user' CHECK (role IN ('admin', 'user')),
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ุฌุฏูู ุงูุถูุงูุงุช
CREATE TABLE warranties (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    customer_id UUID REFERENCES customers(id) ON DELETE CASCADE NOT NULL,
    product_id UUID REFERENCES products(id) ON DELETE CASCADE NOT NULL,
    warranty_number VARCHAR(100) UNIQUE NOT NULL,
    purchase_date DATE NOT NULL,
    warranty_start_date DATE NOT NULL,
    warranty_end_date DATE NOT NULL,
    warranty_duration_months INTEGER NOT NULL,
    notes TEXT,
    created_by UUID REFERENCES user_profiles(id),
    updated_by UUID REFERENCES user_profiles(id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- ุฅูุดุงุก ููุงุฑุณ ูุชุญุณูู ุงูุฃุฏุงุก
CREATE INDEX idx_customers_phone ON customers(phone);
CREATE INDEX idx_customers_invoice ON customers(invoice_number);
CREATE INDEX idx_warranties_customer ON warranties(customer_id);
CREATE INDEX idx_warranties_product ON warranties(product_id);
CREATE INDEX idx_warranties_number ON warranties(warranty_number);
CREATE INDEX idx_warranties_dates ON warranties(warranty_start_date, warranty_end_date);

-- ุชูุนูู Row Level Security (RLS)
ALTER TABLE products ENABLE ROW LEVEL SECURITY;
ALTER TABLE customers ENABLE ROW LEVEL SECURITY;
ALTER TABLE warranties ENABLE ROW LEVEL SECURITY;
ALTER TABLE user_profiles ENABLE ROW LEVEL SECURITY;

-- ุฅูุดุงุก ุงูุณูุงุณุงุช ุงูุฃูููุฉ
-- ุณูุงุณุงุช ุงูููุชุฌุงุช
CREATE POLICY "ุงูุณูุงุญ ูููุณุชุฎุฏููู ุงููุตุงุฏู ุนูููู ุจุฅุฏุงุฑุฉ ุงูููุชุฌุงุช" ON products
    FOR ALL USING (auth.role() = 'authenticated');

-- ุณูุงุณุงุช ุงูุนููุงุก
CREATE POLICY "ุงูุณูุงุญ ูููุณุชุฎุฏููู ุงููุตุงุฏู ุนูููู ุจุฅุฏุงุฑุฉ ุงูุนููุงุก" ON customers
    FOR ALL USING (auth.role() = 'authenticated');

-- ุณูุงุณุงุช ุงูุถูุงูุงุช
CREATE POLICY "ุงูุณูุงุญ ูููุณุชุฎุฏููู ุงููุตุงุฏู ุนูููู ุจุฅุฏุงุฑุฉ ุงูุถูุงูุงุช" ON warranties
    FOR ALL USING (auth.role() = 'authenticated');

-- ุณูุงุณุงุช ูููุงุช ุงููุณุชุฎุฏููู
CREATE POLICY "ุงููุณุชุฎุฏููู ูููููู ุฑุคูุฉ ูููุงุชูู ููุท" ON user_profiles
    FOR SELECT USING (auth.uid() = id);

CREATE POLICY "ุงููุฏูุฑูู ูููููู ุฅุฏุงุฑุฉ ุฌููุน ูููุงุช ุงููุณุชุฎุฏููู" ON user_profiles
    FOR ALL USING (
        EXISTS (
            SELECT 1 FROM user_profiles 
            WHERE id = auth.uid() AND role = 'admin'
        )
    );

-- ุฅูุดุงุก ุฏุงูุฉ ูุชุญุฏูุซ updated_at ุชููุงุฆูุงู
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ language 'plpgsql';

-- ุฑุจุท ุงูุฏุงูุฉ ุจุงูุฌุฏุงูู
CREATE TRIGGER update_products_updated_at BEFORE UPDATE ON products
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_customers_updated_at BEFORE UPDATE ON customers
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_warranties_updated_at BEFORE UPDATE ON warranties
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_profiles_updated_at BEFORE UPDATE ON user_profiles
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- ุฅูุดุงุก ุฏุงูุฉ ูุฅูุดุงุก ููู ุงููุณุชุฎุฏู ุชููุงุฆูุงู ุนูุฏ ุงูุชุณุฌูู
CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO public.user_profiles (id, email, full_name)
    VALUES (
        NEW.id,
        NEW.email,
        COALESCE(NEW.raw_user_meta_data->>'full_name', NEW.email)
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- ุฑุจุท ุงูุฏุงูุฉ ุจุฌุฏูู auth.users
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW EXECUTE FUNCTION public.handle_new_user();

-- ุฅุฏุฑุงุฌ ุจูุงูุงุช ุงูููุชุฌุงุช ุงูุงูุชุฑุงุถูุฉ
INSERT INTO products (name, description) VALUES
('ุดุฑูุฉ ุฃุจู', 'ุดุฑูุฉ ุชูููุฉ ุฃูุฑูููุฉ ูุชุฎุตุตุฉ ูู ุงูุฃุฌูุฒุฉ ุงูุฅููุชุฑูููุฉ'),
('ุดุฑูุฉ ุณุงูุณููุฌ', 'ุดุฑูุฉ ููุฑูุฉ ุฌููุจูุฉ ูุชุฎุตุตุฉ ูู ุงูุฅููุชุฑูููุงุช ูุงูููุงุชู'),
('ุดุฑูุฉ ูุงููุฑูุณููุช', 'ุดุฑูุฉ ุชูููุฉ ุฃูุฑูููุฉ ูุชุฎุตุตุฉ ูู ุงูุจุฑูุฌูุงุช ูุงูุญูุณุจุฉ'),
('ุดุฑูุฉ ุฏูู', 'ุดุฑูุฉ ุฃูุฑูููุฉ ูุชุฎุตุตุฉ ูู ุฃุฌูุฒุฉ ุงูููุจููุชุฑ ูุงูุฎูุงุฏู'),
('ุดุฑูุฉ ุฅุชุด ุจู', 'ุดุฑูุฉ ุฃูุฑูููุฉ ูุชุฎุตุตุฉ ูู ุฃุฌูุฒุฉ ุงูููุจููุชุฑ ูุงูุทุงุจุนุงุช'),
('ุดุฑูุฉ ูููููู', 'ุดุฑูุฉ ุตูููุฉ ูุชุฎุตุตุฉ ูู ุฃุฌูุฒุฉ ุงูููุจููุชุฑ ูุงูุฃุฌูุฒุฉ ุงููุญูููุฉ'),
('ุดุฑูุฉ ุขุณูุณ', 'ุดุฑูุฉ ุชุงููุงููุฉ ูุชุฎุตุตุฉ ูู ุฃุฌูุฒุฉ ุงูููุจููุชุฑ ูุงูููููุงุช'),
('ุดุฑูุฉ ุณููู', 'ุดุฑูุฉ ูุงุจุงููุฉ ูุชุฎุตุตุฉ ูู ุงูุฅููุชุฑูููุงุช ูุงูุชุฑููู'),
('ุดุฑูุฉ ูุงููู', 'ุดุฑูุฉ ูุงุจุงููุฉ ูุชุฎุตุตุฉ ูู ุงููุงููุฑุงุช ูุงูุทุงุจุนุงุช'),
('ุดุฑูุฉ ุฅูุชู', 'ุดุฑูุฉ ุฃูุฑูููุฉ ูุชุฎุตุตุฉ ูู ูุนุงูุฌุงุช ุงูููุจููุชุฑ');

-- ุฑุณุงูุฉ ูุฌุงุญ
SELECT 'ุชู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ! ๐' as message;
